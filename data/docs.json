{
  "dsp_spec_version": "0.0.1",
  "last_updated_by": "",
  "last_updated": "2021-02-05T19:57:03.103Z",
  "entities": [
    {
      "id": "df5d2b53-3711-4da2-a8da-d5711347938c",
      "class": "doc",
      "type": "page",
      "name": "Botões",
      "description": "Os botões comunicam ações que os usuários podem realizar. Eles são normalmente colocados em toda a sua IU, em locais como: Diálogos, Formulários, Barras de Ferramentas, etc. A distinção entre botões e links é importante:\n\nOs links são usados quando você está navegando para outro lugar, como: página “ver todos”, perfil “Marina Carvalho“, etc.\n\nOs botões são usados quando você está realizando uma ação , como: “Enviar”, “Mesclar”, “Criar novo”, “Carregar” etc.\n\n#### Estilos e arquitetura\n\nOs botões pode variar a depender da intenção da ação, assim como a arquitetura de informações na tela.\nAssim, temos a variação de texto, contorno e preenchimento, onde o peso do uso da cor faz com que um elemento se sobressaia do outro, dando o senso do que é mais importante para o usuário na hora da decisão do clique.\nAs cores são usadas para dar a intenção da ação, como nos exemplos abaixo:\n\n![Botões](https://github.com/denysrocha/getrak-dsp/blob/master/assets/botoes.png?raw=true)\n\nO botão **Azul** (`gds-botao-azul`) é um botão de ação primária e é utilizado para a maioria das decisões corriqueiras do usuário.\n\nO **Cinza** é de ação secundária, podendo ser utilizado com quaisquer outros botões mais importantes. \n\nO **Verde** (`gds-botao-verde`) está mais relacionado a ações positivas, como `salvar`, `confirmar`, etc. \n\nO botão **Amarelo** (`gds-botao-amarelo`) é um botão importante que deve ser usado quando queremos mais atenção na ação solicitada do usuário. \n\nNo caso do **Vermelho** (`gds-botao-vermelho`), utilizamos quando queremos mais atenção que o **Amarelo**, pois há risco de perda de dados, ou sensação de perda. \n\nE por fim, mas não menos importante, o botão **Roxo** (`gds-botao-roxo`) pode ser utilizado em situações em que o usuário precise pedir ajuda.\n\nÉ importante respeitar a hierarquia de preenchimento, onde em uma tela é recomendado existir apenas um botão com preenchimento para a ação principal, e ações secundárias sejam tratadas com botões de contorno.\n\n#### Estados\n\nAbaixo serão exibidos os estados padrão, hover e click para cada variação de cor, com a intenção de mostrar feedback da ação do usuário.\n\n![Estados dos botões](https://github.com/denysrocha/getrak-dsp/blob/master/assets/estado-dos-botoes.png?raw=true)\n\n> Os estados de `hover` e `active` podem variar de acordo com o componente nativo ou framework utilizado pelo projeto. Esse detalhe deve ser revisto pela equipe do Design System na hora de implementar com determinada tecnologia em um novo projeto.\n\n#### Anatomia do botão\n\nOs botões devem ter uma altura mínima de `36px`, `38px` como padrão, e `41px` como botão grande, com largura a acomodar o conteúdo contido. O conteúdo deve ter um padding entre o botão e as bordas esquerda e direta de 16px.\n\nO botão deve ser mais arredondado (`border-radius: 8px`) para trazer mais suavidade e deixar a interface mais amigável.\n\n![Anatomia do botão](https://github.com/denysrocha/getrak-dsp/blob/master/assets/anatomia-botao.png?raw=true)\n\nO tamanho de fonte deve ser uma medida menor que o texto padrão base da aplicação, você deve tomar como base os tokens `gds-texto-2-web` (`14.22px`) para interfaces web e `gds-texto-web-texto-2-mobile` (`16px`) para interfaces mobile.",
      "tags": [],
      "last_updated": "2021-02-17T18:21:34.258Z",
      "last_updated_by": "Denys Rocha"
    },
    {
      "id": "615158de-94fd-443b-92a3-456f891c74f0",
      "class": "doc",
      "type": "page",
      "name": "Cores",
      "description": "# Diretrizes\nEssas diretrizes são a estrutura sobre a qual construímos nosso sistema de como a cor é usada na Getrak. A cor diferencia nossa marca e nos ajuda a criar experiências consistentes entre os produtos.\n\n## A cor deve ser sempre acessível\nUse cores focadas e significativas para identificar exatamente o que as pessoas precisam ver. Estamos empenhados em cumprir as relações de contraste **padrão AA** das **Diretrizes de acessibilidade de conteúdo da Web**.\n\nPara fazer isso, escolha cores primárias, secundárias e estendidas que suportem a usabilidade, garantindo contraste de cor suficiente entre os elementos para que pessoas com baixa visão ou daltonismo possam ver e usar nossos produtos.\n\n## Comunicação além da estética\nEmbora valorizemos o uso esteticamente agradável da cor, valorizamos ainda mais uma comunicação clara. Nosso uso de cores deve ser sugestivo, racional e deve servir para apoiar a finalidade do conteúdo.\n\n## Cores base\nNossa paleta principal é composta de neutros, branco e azul para trazer vida à nossa marca e é usada de maneira lógica em todo o produto e marketing para guiar os olhos e destacar as partes importantes. \n\nUsamos Azul Brilhante Base (`gds-azul-brilhante #007FF`) para ações primárias, botões, links de texto, para indicar  progresso, representar uma autenticação ou fornecer uma informação. O Azul Escuro Base (`gds-azul-escuro-base #17224D`) é usado principalmente para o corpo de títulos e subtítulos, e o Branco Base (`gds-branco-base #FFFFFF`) que é utilizado para planos de fundo de página, em ícones e corpo de texto sob fundo escuro.\n\n![Cores base](https://github.com/denysrocha/getrak-dsp/blob/master/assets/cores-base.png?raw=true)\n\n## Cores secundárias\nNossa paleta de cores secundárias é formada por uma variedade de cores reservadas para diversos fins. É composta pelo Laranja avermelhado (`gds-laranja-avermelhado #C02500`), Amarelo beer (`gds-amarelo-beer #FFAA00`) e Verde ciano (`gds-verde-ciano #34B37E`), que devem ser intencionalmente usadas para fornecer **feedback** significativo sobre nossos produtos. Consulte as diretrizes de Cores Semânticas no final da página para obter mais informações.\n\n![Cores secundárias](https://github.com/denysrocha/getrak-dsp/blob/master/assets/cores-secundarias.png?raw=true)\n\nA paleta secundária também é composta pelas cores Ciano (`gds-ciano #17E9E1`), Azul aqua (`gds-azul-aqua #00B8D9`) e Violeta (`gds-violeta #7D4CE4`), ambas variantes da paleta principal e devem ser exploradas em layouts de comunicação interna e externa, assim como em ilustrações. O Azul aqua (`gds-azul-aqua #00B8D9`) pode ser usado com cautela em pequenos detalhes na construção de interfaces, como em bordas e linhas sutis.\n\n![Cores secunárias b](https://github.com/denysrocha/getrak-dsp/blob/master/assets/cores-secundarias-b.png?raw=true)\n\n## Paleta estendida\nA paleta estendida consiste nas tonalidades utilizáveis de cada cor da paleta. O uso dessas cores varia dependendo do ponto de contato, mas elas são úteis para ilustrações, gráficos e componentes no produto.\n\n### Neutros\nOs tons neutros normalmente são usados para texto e fundos sutis quando não queremos chamar muita atenção para um ponto específico ou transmitir uma informação como \"desabilitado\".\n\n#### Neutros escuros\nOs neutros escuros são muito eficazes para criar contraste e, portanto, são a cor primária usada para tipografia. Ocasionalmente, os neutros escuros são encontrados na ilustração, mas raramente dominam a paleta. Em algumas ocasiões podem ser utilizados em elementos e ilustrações em modo escuro.\n\n![Neutros escuros](https://github.com/denysrocha/getrak-dsp/blob/master/assets/neutros-escuros.png?raw=true)\n\n#### Neutros médios\n\nUse neutros médios para criar profundidade ou sombra em componentes, como em caixas de diálogo, modais e cards. Evite tons médios neutros como cores de fundo porque geralmente não há contraste suficiente para permanecer compatível com AA.  Fazemos uma excessão do Cinza (`gds-cinza #B3BAC5`) que pode ser ser usado em dicas textos de campos de entrada.\n\n![Neutros médios](https://github.com/denysrocha/getrak-dsp/blob/master/assets/neutros-medios.png?raw=true)\n\n#### Neutros claros\nUsamos neutros leves como fundos sutis para indicar vários estados interativos, como desabilitado, ou simplesmente para criar atenção secundária para um componente. Você também encontrará neutros claros em caixas de diálogo, campos de texto, modais e tags. A cor Gelo (`gds-gelo #F9F9FB`) é a única que deve ser usada em textos, sempre sob fundos escuros.\n\n![Neutros claros](https://github.com/denysrocha/getrak-dsp/blob/master/assets/neutros-claros.png?raw=true)\n\n### Vermelhos e laranjas\nCaso precise de mais variações do Vermelho alaranjado (#C02500) para fundos em mensagens negativas, estados de erro chamando atenção para informações, ou ações que bloqueiam o fluxo de trabalho, fornecemos as seguintes tonalidades abaixo. \n\n![Vermelhos e laranjas](https://github.com/denysrocha/getrak-dsp/blob/master/assets/vermelhos-e-laranjas.png?raw=true)\n\n### Amarelos\nO amarelo indica um alerta, um aviso ou que o progresso está impedido.\n\n![Amarelos](https://github.com/denysrocha/getrak-dsp/blob/master/assets/amarelos.png?raw=true)\n\n### Verdes\nUsamos o verde para indicar ações positivas, sucesso ou para comemorar uma vitória. Lembre-se de que nosso verde é muito vibrante, o que pode causar cansaço visual em grandes doses. No entanto, por causa dessa vibração, ele também pode se destacar bem entre muitos outros elementos de uma página, por isso é uma boa escolha para chamadas para ação e CTA's.\n\n![Verdes](https://github.com/denysrocha/getrak-dsp/blob/master/assets/verdes.png?raw=true)\n\n### Azuis\nO azul é usado para nos ajudar a reforçar nossa presença e unificar nossos pontos de contato do marketing ao produto. Ele está no centro de toda comunicação e deve ser usado intencionalmente, mas com moderação. Como com todas as cores da paleta, você deve estar atento aos valores de cor fornecidos nestas diretrizes.\n\nAzul é usado para indicar autenticação, conectividade ou progresso. Você encontrará o azul em mensagens, botões, navegação e ícones.\n\n![Azuis](https://github.com/denysrocha/getrak-dsp/blob/master/assets/azuis.png?raw=true)\n\n### Roxos\nO roxo indica ajuda e suporte e é usado em botões, ícones e mensagens. Também é usado para exibir links já visitados em tipografia da web e como uma cor de destaque na ilustração. No entanto, é melhor ser usado em pequenas doses na ilustração, pois às vezes pode colidir com o azul. Caso opte pelo roxo aplicado em textos, utilize o Roxo vivo `#6457c0` e se atente aos índices de opacidade dos textos.\n\n![Roxos](https://github.com/denysrocha/getrak-dsp/blob/master/assets/roxos.png?raw=true)\n\n## Cor semântica\nAs diretrizes a seguir descrevem quando usar cores no produto. A cor semântica ajuda os usuários a identificar status, ver ações, encontrar ajuda e compreender as próximas etapas. O uso consistente de cores mantém a carga cognitiva baixa e contribui para uma experiência do usuário unificada e pregnante.\n\n![Cor semântica](https://github.com/denysrocha/getrak-dsp/blob/master/assets/cor-semantica.png?raw=true)\n\n## Cores textuais\nA cor também desempenha um papel fundamental  na hierarquia tipográfica de uma interface, muitas vezes por tipos estabelecidos como:\n\n**Principal**  para a maior  parte do texto da interface, seja corpo ou cabeçalho.\n\n**Secundário** para contraste reduzido utilizaremos neutro médio para informações complementares.\n\n**Interativo** não apenas para links, mas também para botões planos.\n\n**Desativado** resultando na utilização de neutro claro.\n\n**Erro** geralmente vermelho, para o maior contraste com o ambiente.\n\n![Cores textuais](https://github.com/denysrocha/getrak-dsp/blob/master/assets/cores-textuais.png?raw=true)",
      "tags": [],
      "last_updated": "2021-02-17T17:29:56.801Z",
      "last_updated_by": "Denys Rocha"
    },
    {
      "id": "ec3b2980-f0eb-4d77-8e3f-9e40345781dd",
      "class": "doc",
      "type": "page",
      "name": "Estilos de texto",
      "description": "## Dispositivos web\n\nA [WCAG 2.0](https://www.w3.org/Translations/WCAG20-pt-br/WCAG20-pt-br-20141024/) (Web Content Accessibility Guidelines) recomenda que a fonte base do corpo de um texto na web não deve ser inferior a `12px` (`9pt`), para que o mesmo seja legível e acessível. A mesma instituição recomenda o tamanho de fonte padrão em `16px` (`12pt`). \n\nNa Getrak utilizaremos a fonte base Open Sans, `16px` (`12pt`) como recomenado pela [WCAG 2.0 W3C](https://www.w3.org/Translations/WCAG20-pt-br/WCAG20-pt-br-20141024/), com uma escala de 16p x 1.125 para obter estilos de textos maiores e menores, como títulos, subtítulos e legendas.\n\nA simulação pode ser feita através do site: [https://type-scale.com/](https://type-scale.com/)\n\n\n## Web mobile\n\nPara interfaces mobile, utilizaremos a fonte base Open Sans, 18 (`1.125rem`/`18px`/`13.5pt`), pois oferece ótima escaneabilidade para o conteúdo exibido em seus navegadores, por se tratar de dispositivos com telas de alta densidade. Utilizamos uma escala de 18 x 1.125\n\nO site [Medium](https://medium.com/) foi uma referência para avaliar legibilidade de textos na web e mobile.\n\n\n## App mobile\n\nPara aplicativos utilizaremos a mesma família de fonte, e `16pt` como tamanho base, usando o mesmo multiplicador de 1.125 para obter os títulos, subtítulos, texto e legendas.\n\n## Uso\n\nVocê pode utilizar os design tokens de tipografia, onde o número da fonte vem na proporção de pixel real com base no número 16. É tarefa de quem usar converter para uma medida relativa, como `em` ou `rem`, e no caso do browser de dispositivo móvel, usar 18 (1.125rem/18px/13.5pt) como tamanho de fonte base multiplicado por 1.125, como dito na seção anterior. Dessa forma, todos os tamanhos aumentarão proporcionalmente.\nNo caso de aplicações para dispositivos móveis, utilizamos o número literal que vem do design token.\n\n![Tipografia](https://github.com/denysrocha/getrak-dsp/blob/master/assets/tipografia.png?raw=true)\n\n## Design Tokens\n\nOs design tokens estão nomeados seguindo o padrão `$gds-<elemento>` ou `gdsElemento`, como por exemplo na linguagem `sass` nós temos: `$gds-titulo-h-1`, ou `$gds-texto`. Já para javascript podemos utiliza-los no padrão: `gdsTituloH1`, ou `gdsTexto`.\nÉ de responsabilidade do programador criar sua folha de estilos definindo suas classes baseadas nos nesses tokens.\n\nNo caso do VueBootstrap, é só importar [esse arquivo](https://github.com/denysrocha/poc-gds-design-system/blob/main/src/assets/scss/text-styles.scss) que já contém as classes corretas.\n\nPara uso em aplicações React Native, é só usar o [arquivo js](https://github.com/denysrocha/poc-gds-design-system/blob/main/src/assets/js/tokens.js).",
      "tags": [],
      "last_updated": "2021-03-26T15:36:26.941Z",
      "last_updated_by": ""
    },
    {
      "id": "178fa329-d2a1-4631-8004-8c3c2e66d173",
      "class": "doc",
      "type": "page",
      "name": "Layout",
      "description": "O layout de aplicações web e mobile deve obedecer as regras aqui definidas baseando-se em sistemas de grid responsivo. Esse guia foi fortemente baseado no sistema de design Material.io.\n\n\n#### Sistema de grid responsivo\n\nO sistema de grid orienta designers e desenvolvedores a distribuir de forma harmoniosa todo o conteúdo mostrado na tela do usuário. É muito importante que o usuário tenha clareza das ações que precisa tomar enquanto escanea a tela rapidamente.\n\nO layout distribuído em grid responsivo deve adaptar o conteúdo a diferentes tamanhos e orientações de tela, garantindo consistência entre os layouts.\n\n\n#### Colunas, calhas e margens\n\nUtilizamos a organização de colunas, calhas (gutters) e margens, onde podemos assumir certa flexibilidade quanto a cada um desses itens, dependendo do tipo de layout (fixo/fluido) e determinados ponto de interrupção (breakpoints).\n\nO conteúdo deve ser distribuído em grids de 12, 8, 4 e 2 colunas, para telas de computadores, tablets e smartphones respectivamente. As colunas tem tamanho flexível, sendo determinada em porcentagens. O número de colunas utilizado vai depender do ponto de interrupção que estiver de acordo com a largura da tela.\n\n![Tablet](https://github.com/denysrocha/getrak-dsp/blob/master/assets/layout-tablet.png?raw=true)\n*Layout mobile tablet com grid de 8 colunas, ponto de interrupção acima de `768px`, calhas e margens de `24px`*\n\n\n![Web](https://github.com/denysrocha/getrak-dsp/blob/master/assets/layout-desktop-fixo.png?raw=true)\n*Layout desktop com grid de 12 colunas, ponto de interrupção acima de `990px`, calhas e margens de `24px`*\n\n\n![Mobile](https://github.com/denysrocha/getrak-dsp/blob/master/assets/layout-mobile.png?raw=true)\n*Celular com grid de 4 e 2 colunas, com ponto de interrupção de `375px`, calhas e margens de `16px`*\n\n\nCom observado nos exemplos acima, as calhas variam de tamanho, primeiro dependendo do ponto de interrupção da tela, depois da intenção da disposição do conteúdo (maior ou menor densidade). Aqui vamos adotar um padrão para definição de margens e calhas, sendo o mais comum: `24px` para telas grandes, `16px` para tablets e celulares. \n\nAbaixo estão as sugestões de uso de margens e calhas para os principais pontos de interrupção.\n\n![Tabela](https://github.com/denysrocha/getrak-dsp/blob/master/assets/layout-tabela-breakpoints.png?raw=true)\n\n\n#### Contêineres de páginas\n\nContêineres de páginas\n\nDependendo do conteúdo da página, podemos escolher pelo layout **fixo** ou **fluido**. O layout **fluido** não impõe nenhuma restrição de largura aos contêineres das páginas, portanto, os elementos se expandem pela tela para preencher todo o espaço disponível.\n\nO layout **fixo** aplica a largura máxima ideal aos contêineres das páginas de acordo com os elementos exibidos, para que possam ser experimentados usando a largura mais adequada.\n\nNo layout **fixo**, existem três larguras máximas possíveis para contêineres de páginas. Para cada largura, você deve considerar qual é o melhor para consumir e interagir com os elementos na página. As seguintes larguras incluem um `24px` de preenchimento nos dois lados.\n\n* `990px`: Por padrão, todas as páginas usam essa largura máxima. É ideal para formulários, páginas simples, tabelas com poucas colunas ou páginas que se concentram no conteúdo escrito.\n* `1280px`: Para páginas que possuem muitos elementos horizontais, como tabelas/listas com muito conteúdo ou tabelas com muitas colunas.\n* Largura total (100%): exceção para páginas em que a interação se beneficia com mais conteúdo na tela, como cards, gráficos e outras visualizações de dados ou painéis.\n\n![Layout fixo](https://github.com/denysrocha/getrak-dsp/blob/master/assets/layout-desktop-fixo.png?raw=true)\n*Layout desktop fixo com grid de 12 colunas, ponto de interrupção acima de `990px`, calhas e margens de `24px`*\n\n\n![Layout fluido](https://github.com/denysrocha/getrak-dsp/blob/master/assets/layout-desktop-fluido.png?raw=true)\n*Layout desktop fluido com grid de 12 colunas, calhas e margens de `24px`*\n\n> Recomendamos que você tente usar primeiro `990px`, a menos que outra largura seja mais adequada. Uma largura também pode ser escolhida com base na consistência entre visualizações semelhantes em páginas diferentes, mesmo se outra largura fosse mais adequada.\n\n\n#### Notas ao designer\n\nIndependente do tamanho da tela, deve-se utilizar os grids de acordo com a categoria (desktop/web, tablet e mobile) respeitando os breakpoints definidos.\n\n![Layout XD](https://github.com/denysrocha/getrak-dsp/blob/master/assets/config-layout-xd.png?raw=true)\n*Esquema de configuração de grids no Adobe XD*\n\n1. Web `190px`\n2. Web `1366px`\n3. Web `1280px`\n4. iPad, Nexus 9\n5. iPhone XR, XS Max, 11 (4 colunas)\n6. iPhone XR, XS Max, 11 (2 colunas)\n7. iPhone X, XS, 11 Pro (4 colunas)\n8. iPhone X, XS, 11 Pro (2 colunas)",
      "tags": [],
      "last_updated": "2021-02-19T14:18:52.008Z",
      "last_updated_by": "Denys Rocha"
    },
    {
      "id": "949e78df-23ee-4a69-b42f-ce59b203a8fc",
      "class": "doc",
      "type": "page",
      "name": "Linha de base do grid",
      "description": "A adesão a uma linha de base do grid nos permite ser mais eficientes, removendo a tomada de decisões e mantendo um ritmo consistente entre os componentes e a tipografia.\n\n#### Componentes\n\nO uso de uma linha de base do grid de `8px` permite flexibilidade ao dimensionar e definir nosso espaçamento sem sobrecarregar o sistema com muitas opções. Usando múltiplos de 8 para definir dimensões, preenchimento e margens dos componentes, garantimos que todos os elementos da interface do usuário estejam alinhados à grade de pixels.\n\nEssa convenção de linha de base flui naturalmente para o restante do sistema de grid, que inclui ícones, componentes e dimensões de layout. Sempre tente alinhar objetos no grid de `8px`, mas sempre que necessário, use o bom senso para ajustar seus projetos em `4px`. A linha de base de 4 pixels existe para permitir mais flexibilidade para alturas de linha e ajustes menores.\n\nUm bom exemplo de aplicação é utilizar o grid de `8px` para margens e uso geral, e de `4px` para tipografia, botões e ícones, ou seja, elementos pequenos que precisam estar dentro do grid de colunas mas precisam de ajustes finos.\n\n![Linha de base do grid de componentes](https://github.com/denysrocha/getrak-dsp/blob/master/assets/linha-base-grid-componentes.png?raw=true)\n*Grid de `8px`, com ícone de `24px` e grid de `4px` para ajustar o texto de `24px` de altura de linha e `16px` de altura interna*\n\nÉ comum ver espaçamentos de `4px` em elementos compostos, como inputs, onde o espaço entre o texto e a borda da caixa seja de `12px`. Lembrando que se trata de ajustes finos, então trate isso como exceção.\n\n\n#### Alvos e áreas de toque\n\nOs alvos de toque se aplicam a qualquer dispositivo que receba entradas por toque e sem toque. Para equilibrar a densidade e a usabilidade das informações, os alvos de toque devem ter pelo menos 48 x 48 pixels, com pelo menos `8px` de espaço entre os alvos.\n\n![Alvo e áreas de toque](https://github.com/denysrocha/getrak-dsp/blob/master/assets/alvo-area-toque.png?raw=true)\n*Destino de toque mínimo de `48px` x `48px` [Material Design, Alvos de toque](https://material.io/design/layout/spacing-methods.html#touch-targets)*\n\nEssas são as regras básicas para uma boa distribuição do conteúdo em diversos layouts. Esse texto está sujeito à mudanças.\n\n**Referências:**\n\n* [Material Design](https://material.io/design/layout/understanding-layout.html#)\n* [GitLab Design System](https://design.gitlab.com/layout/grid)\n* [Atlassian Design System](https://atlassian.design/guidelines/product/foundations/grid)",
      "tags": [],
      "last_updated": "2021-02-19T13:48:09.850Z",
      "last_updated_by": "Denys Rocha"
    },
    {
      "id": "94e9bc65-1221-4050-8583-74595e022a69",
      "class": "doc",
      "type": "page",
      "name": "VOz e toms",
      "description": "Edit this with the pencil icon.\n\nMarkdown is supported to help you create great documentation for your design system.",
      "tags": [],
      "last_updated": "2021-02-18T12:47:15.514Z",
      "last_updated_by": ""
    }
  ]
}